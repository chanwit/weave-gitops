// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: api/imageautomation/generated.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CommitSpec specifies how to commit changes to the git repository
type CommitSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author          *CommitUser `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	SigningKey      *SigningKey `protobuf:"bytes,2,opt,name=signing_key,json=signingKey,proto3" json:"signing_key,omitempty"`
	MessageTemplate string      `protobuf:"bytes,3,opt,name=message_template,json=messageTemplate,proto3" json:"message_template,omitempty"`
}

func (x *CommitSpec) Reset() {
	*x = CommitSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitSpec) ProtoMessage() {}

func (x *CommitSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitSpec.ProtoReflect.Descriptor instead.
func (*CommitSpec) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{0}
}

func (x *CommitSpec) GetAuthor() *CommitUser {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *CommitSpec) GetSigningKey() *SigningKey {
	if x != nil {
		return x.SigningKey
	}
	return nil
}

func (x *CommitSpec) GetMessageTemplate() string {
	if x != nil {
		return x.MessageTemplate
	}
	return ""
}

type CommitUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CommitUser) Reset() {
	*x = CommitUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitUser) ProtoMessage() {}

func (x *CommitUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitUser.ProtoReflect.Descriptor instead.
func (*CommitUser) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{1}
}

func (x *CommitUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommitUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// CrossNamespaceSourceReference contains enough information to let you locate the
// typed Kubernetes resource object at cluster level.
type CrossNamespaceSourceReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apiversion string `protobuf:"bytes,1,opt,name=apiversion,proto3" json:"apiversion,omitempty"`
	Kind       string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace  string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CrossNamespaceSourceReference) Reset() {
	*x = CrossNamespaceSourceReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossNamespaceSourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossNamespaceSourceReference) ProtoMessage() {}

func (x *CrossNamespaceSourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossNamespaceSourceReference.ProtoReflect.Descriptor instead.
func (*CrossNamespaceSourceReference) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{2}
}

func (x *CrossNamespaceSourceReference) GetApiversion() string {
	if x != nil {
		return x.Apiversion
	}
	return ""
}

func (x *CrossNamespaceSourceReference) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CrossNamespaceSourceReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CrossNamespaceSourceReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GitCheckoutSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GitCheckoutSpec) Reset() {
	*x = GitCheckoutSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitCheckoutSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitCheckoutSpec) ProtoMessage() {}

func (x *GitCheckoutSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitCheckoutSpec.ProtoReflect.Descriptor instead.
func (*GitCheckoutSpec) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{3}
}

type GitSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkout *GitCheckoutSpec `protobuf:"bytes,1,opt,name=checkout,proto3" json:"checkout,omitempty"`
	Commit   *CommitSpec      `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	Push     *PushSpec        `protobuf:"bytes,3,opt,name=push,proto3" json:"push,omitempty"`
}

func (x *GitSpec) Reset() {
	*x = GitSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitSpec) ProtoMessage() {}

func (x *GitSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitSpec.ProtoReflect.Descriptor instead.
func (*GitSpec) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{4}
}

func (x *GitSpec) GetCheckout() *GitCheckoutSpec {
	if x != nil {
		return x.Checkout
	}
	return nil
}

func (x *GitSpec) GetCommit() *CommitSpec {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *GitSpec) GetPush() *PushSpec {
	if x != nil {
		return x.Push
	}
	return nil
}

// ImageUpdateAutomation is the Schema for the imageupdateautomations API
type ImageUpdateAutomation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind                       string                       `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Apiversion                 string                       `protobuf:"bytes,2,opt,name=apiversion,proto3" json:"apiversion,omitempty"`
	Name                       string                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GenerateName               string                       `protobuf:"bytes,4,opt,name=generate_name,json=generateName,proto3" json:"generate_name,omitempty"`
	Namespace                  string                       `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SelfLink                   string                       `protobuf:"bytes,6,opt,name=self_link,json=selfLink,proto3" json:"self_link,omitempty"`
	ResourceVersion            string                       `protobuf:"bytes,7,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	Generation                 int64                        `protobuf:"varint,8,opt,name=generation,proto3" json:"generation,omitempty"`
	DeletionGracePeriodSeconds int64                        `protobuf:"varint,9,opt,name=deletion_grace_period_seconds,json=deletionGracePeriodSeconds,proto3" json:"deletion_grace_period_seconds,omitempty"`
	Labels                     map[string]string            `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations                map[string]string            `protobuf:"bytes,11,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Finalizers                 []string                     `protobuf:"bytes,12,rep,name=finalizers,proto3" json:"finalizers,omitempty"`
	ClusterName                string                       `protobuf:"bytes,13,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Spec                       *ImageUpdateAutomationSpec   `protobuf:"bytes,14,opt,name=spec,proto3" json:"spec,omitempty"`
	Status                     *ImageUpdateAutomationStatus `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ImageUpdateAutomation) Reset() {
	*x = ImageUpdateAutomation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageUpdateAutomation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageUpdateAutomation) ProtoMessage() {}

func (x *ImageUpdateAutomation) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageUpdateAutomation.ProtoReflect.Descriptor instead.
func (*ImageUpdateAutomation) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{5}
}

func (x *ImageUpdateAutomation) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ImageUpdateAutomation) GetApiversion() string {
	if x != nil {
		return x.Apiversion
	}
	return ""
}

func (x *ImageUpdateAutomation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageUpdateAutomation) GetGenerateName() string {
	if x != nil {
		return x.GenerateName
	}
	return ""
}

func (x *ImageUpdateAutomation) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageUpdateAutomation) GetSelfLink() string {
	if x != nil {
		return x.SelfLink
	}
	return ""
}

func (x *ImageUpdateAutomation) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *ImageUpdateAutomation) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *ImageUpdateAutomation) GetDeletionGracePeriodSeconds() int64 {
	if x != nil {
		return x.DeletionGracePeriodSeconds
	}
	return 0
}

func (x *ImageUpdateAutomation) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ImageUpdateAutomation) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ImageUpdateAutomation) GetFinalizers() []string {
	if x != nil {
		return x.Finalizers
	}
	return nil
}

func (x *ImageUpdateAutomation) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ImageUpdateAutomation) GetSpec() *ImageUpdateAutomationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ImageUpdateAutomation) GetStatus() *ImageUpdateAutomationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ImageUpdateAutomationSpec defines the desired state of ImageUpdateAutomation
type ImageUpdateAutomationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceRef *CrossNamespaceSourceReference `protobuf:"bytes,1,opt,name=source_ref,json=sourceRef,proto3" json:"source_ref,omitempty"`
	GitSpec   *GitSpec                       `protobuf:"bytes,2,opt,name=git_spec,json=gitSpec,proto3" json:"git_spec,omitempty"`
	Update    *UpdateStrategy                `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	Suspend   bool                           `protobuf:"varint,4,opt,name=suspend,proto3" json:"suspend,omitempty"`
}

func (x *ImageUpdateAutomationSpec) Reset() {
	*x = ImageUpdateAutomationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageUpdateAutomationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageUpdateAutomationSpec) ProtoMessage() {}

func (x *ImageUpdateAutomationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageUpdateAutomationSpec.ProtoReflect.Descriptor instead.
func (*ImageUpdateAutomationSpec) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{6}
}

func (x *ImageUpdateAutomationSpec) GetSourceRef() *CrossNamespaceSourceReference {
	if x != nil {
		return x.SourceRef
	}
	return nil
}

func (x *ImageUpdateAutomationSpec) GetGitSpec() *GitSpec {
	if x != nil {
		return x.GitSpec
	}
	return nil
}

func (x *ImageUpdateAutomationSpec) GetUpdate() *UpdateStrategy {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *ImageUpdateAutomationSpec) GetSuspend() bool {
	if x != nil {
		return x.Suspend
	}
	return false
}

// ImageUpdateAutomationStatus defines the observed state of ImageUpdateAutomation
type ImageUpdateAutomationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastPushCommit         string `protobuf:"bytes,1,opt,name=last_push_commit,json=lastPushCommit,proto3" json:"last_push_commit,omitempty"`
	ObservedGeneration     int64  `protobuf:"varint,2,opt,name=observed_generation,json=observedGeneration,proto3" json:"observed_generation,omitempty"`
	LastHandledReconcileAt string `protobuf:"bytes,3,opt,name=last_handled_reconcile_at,json=lastHandledReconcileAt,proto3" json:"last_handled_reconcile_at,omitempty"`
}

func (x *ImageUpdateAutomationStatus) Reset() {
	*x = ImageUpdateAutomationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageUpdateAutomationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageUpdateAutomationStatus) ProtoMessage() {}

func (x *ImageUpdateAutomationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageUpdateAutomationStatus.ProtoReflect.Descriptor instead.
func (*ImageUpdateAutomationStatus) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{7}
}

func (x *ImageUpdateAutomationStatus) GetLastPushCommit() string {
	if x != nil {
		return x.LastPushCommit
	}
	return ""
}

func (x *ImageUpdateAutomationStatus) GetObservedGeneration() int64 {
	if x != nil {
		return x.ObservedGeneration
	}
	return 0
}

func (x *ImageUpdateAutomationStatus) GetLastHandledReconcileAt() string {
	if x != nil {
		return x.LastHandledReconcileAt
	}
	return ""
}

// PushSpec specifies how and where to push commits.
type PushSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch string `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *PushSpec) Reset() {
	*x = PushSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSpec) ProtoMessage() {}

func (x *PushSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSpec.ProtoReflect.Descriptor instead.
func (*PushSpec) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{8}
}

func (x *PushSpec) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

// SigningKey references a Kubernetes secret that contains a GPG keypair
type SigningKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SigningKey) Reset() {
	*x = SigningKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningKey) ProtoMessage() {}

func (x *SigningKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningKey.ProtoReflect.Descriptor instead.
func (*SigningKey) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{9}
}

// UpdateStrategy is a union of the various strategies for updating
// the Git repository. Parameters for each strategy (if any) can be
// inlined here.
type UpdateStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy string `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Path     string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *UpdateStrategy) Reset() {
	*x = UpdateStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imageautomation_generated_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStrategy) ProtoMessage() {}

func (x *UpdateStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_api_imageautomation_generated_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStrategy.ProtoReflect.Descriptor instead.
func (*UpdateStrategy) Descriptor() ([]byte, []int) {
	return file_api_imageautomation_generated_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateStrategy) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *UpdateStrategy) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_api_imageautomation_generated_proto protoreflect.FileDescriptor

var file_api_imageautomation_generated_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0xb2, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x40, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22,
	0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x11, 0x0a, 0x0f, 0x47, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x22, 0xb7, 0x01, 0x0a, 0x07, 0x47, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x40,
	0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x12, 0x37, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x70, 0x75, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0xc8, 0x06, 0x0a,
	0x15, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x1d, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4e, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x5d, 0x0a, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x01, 0x0a, 0x19, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x51, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x37, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x67, 0x69, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x3b, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x1b, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x22, 0x22,
	0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x22, 0x0c, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x22, 0x40, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x77, 0x65, 0x61, 0x76, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x77, 0x65, 0x61, 0x76,
	0x65, 0x2d, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_imageautomation_generated_proto_rawDescOnce sync.Once
	file_api_imageautomation_generated_proto_rawDescData = file_api_imageautomation_generated_proto_rawDesc
)

func file_api_imageautomation_generated_proto_rawDescGZIP() []byte {
	file_api_imageautomation_generated_proto_rawDescOnce.Do(func() {
		file_api_imageautomation_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_imageautomation_generated_proto_rawDescData)
	})
	return file_api_imageautomation_generated_proto_rawDescData
}

var file_api_imageautomation_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_imageautomation_generated_proto_goTypes = []interface{}{
	(*CommitSpec)(nil),                    // 0: image_automation.v1.CommitSpec
	(*CommitUser)(nil),                    // 1: image_automation.v1.CommitUser
	(*CrossNamespaceSourceReference)(nil), // 2: image_automation.v1.CrossNamespaceSourceReference
	(*GitCheckoutSpec)(nil),               // 3: image_automation.v1.GitCheckoutSpec
	(*GitSpec)(nil),                       // 4: image_automation.v1.GitSpec
	(*ImageUpdateAutomation)(nil),         // 5: image_automation.v1.ImageUpdateAutomation
	(*ImageUpdateAutomationSpec)(nil),     // 6: image_automation.v1.ImageUpdateAutomationSpec
	(*ImageUpdateAutomationStatus)(nil),   // 7: image_automation.v1.ImageUpdateAutomationStatus
	(*PushSpec)(nil),                      // 8: image_automation.v1.PushSpec
	(*SigningKey)(nil),                    // 9: image_automation.v1.SigningKey
	(*UpdateStrategy)(nil),                // 10: image_automation.v1.UpdateStrategy
	nil,                                   // 11: image_automation.v1.ImageUpdateAutomation.LabelsEntry
	nil,                                   // 12: image_automation.v1.ImageUpdateAutomation.AnnotationsEntry
}
var file_api_imageautomation_generated_proto_depIdxs = []int32{
	1,  // 0: image_automation.v1.CommitSpec.author:type_name -> image_automation.v1.CommitUser
	9,  // 1: image_automation.v1.CommitSpec.signing_key:type_name -> image_automation.v1.SigningKey
	3,  // 2: image_automation.v1.GitSpec.checkout:type_name -> image_automation.v1.GitCheckoutSpec
	0,  // 3: image_automation.v1.GitSpec.commit:type_name -> image_automation.v1.CommitSpec
	8,  // 4: image_automation.v1.GitSpec.push:type_name -> image_automation.v1.PushSpec
	11, // 5: image_automation.v1.ImageUpdateAutomation.labels:type_name -> image_automation.v1.ImageUpdateAutomation.LabelsEntry
	12, // 6: image_automation.v1.ImageUpdateAutomation.annotations:type_name -> image_automation.v1.ImageUpdateAutomation.AnnotationsEntry
	6,  // 7: image_automation.v1.ImageUpdateAutomation.spec:type_name -> image_automation.v1.ImageUpdateAutomationSpec
	7,  // 8: image_automation.v1.ImageUpdateAutomation.status:type_name -> image_automation.v1.ImageUpdateAutomationStatus
	2,  // 9: image_automation.v1.ImageUpdateAutomationSpec.source_ref:type_name -> image_automation.v1.CrossNamespaceSourceReference
	4,  // 10: image_automation.v1.ImageUpdateAutomationSpec.git_spec:type_name -> image_automation.v1.GitSpec
	10, // 11: image_automation.v1.ImageUpdateAutomationSpec.update:type_name -> image_automation.v1.UpdateStrategy
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_imageautomation_generated_proto_init() }
func file_api_imageautomation_generated_proto_init() {
	if File_api_imageautomation_generated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_imageautomation_generated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossNamespaceSourceReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitCheckoutSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageUpdateAutomation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageUpdateAutomationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageUpdateAutomationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imageautomation_generated_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_imageautomation_generated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_imageautomation_generated_proto_goTypes,
		DependencyIndexes: file_api_imageautomation_generated_proto_depIdxs,
		MessageInfos:      file_api_imageautomation_generated_proto_msgTypes,
	}.Build()
	File_api_imageautomation_generated_proto = out.File
	file_api_imageautomation_generated_proto_rawDesc = nil
	file_api_imageautomation_generated_proto_goTypes = nil
	file_api_imageautomation_generated_proto_depIdxs = nil
}
